@model IEnumerable<Sistema_JYR.Models.Proformas>
@using Microsoft.AspNet.Identity
@using Sistema_JYR.Models
@using Sistema_JYR.Models.Session

@{
    ViewBag.Title = "Mis Proformas";
    Sistema_JYR.Models.SistemaJYREntities db = new Sistema_JYR.Models.SistemaJYREntities();
    string id = HttpContext.Current.User.Identity.GetUserId();
    var usuario = db.AspNetUsers.Where(x => x.Id == id).First();
}

<div class="container-fluid">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"> @Html.ActionLink("Inicio", "Index", "Home") </li>
        <li class="breadcrumb-item active">Mis Proformas</li>
    </ol>
</div>

<div class="container-fluid">

    <div class="row">
        <div class="col-lg-4">
            <h2><i class="fa fa-list-ul" style="margin-right: 2px"></i>Mis Proformas</h2>

        </div>
        <div class="col-lg-4">

            <a class="btn btn-dark btn-block" href="@Url.Action("CreateProfromaCliente",new { id = usuario.Id })">
                <i class="fa fa-plus" style="margin-right:5px"></i>Crear Nueva Proforma
            </a>
        </div>
    </div>
</div>

<hr />


<div class="container-fluid" style="text-align: center" id="divProformas">
    <div>
        <table class="table table-striped table-hover table-bordered table-responsive-md" style="width:100%">

            <tr>
                <th>
                    Número
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Fecha)
                </th>
                <th>
                    Nombre
                </th>
                @*<th>
                        Descuento
                    </th>
                    <th>
                        Impuestos
                    </th>
                    <th>
                        Total
                    </th>*@
                <th>
                    Acciones
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @item.Fecha.ToString("dd/M/yyyy")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NombreProforma)
                    </td>
                    @*<td>

                            @if (item.TotalDescuento == 0)
                            {
                                <label>₡0,00</label>
                            }
                            else
                            {
                                <label>₡@item.TotalDescuento.ToString("0,#.00")</label>
                            }
                        </td>
                        <td>
                            @if (item.TotalImpuesto == 0)
                            {
                                <label>₡0,00</label>
                            }
                            else
                            {
                                <label>₡@item.TotalImpuesto.ToString("0,#.00")</label>
                            }
                        </td>
                        <td>
                            @if (item.TotalPagar == 0)
                            {
                                <label>₡0,00</label>
                            }
                            else
                            {
                                <label> ₡@item.TotalPagar.ToString("0,#.00")</label>
                            }
                        </td>*@
                <td>
                    @if (Session["Documento"] != null)
                    {
                        if (((Documento)Session["Documento"]).TipoDocumento == TipoDocumento.Proforma)
                        {
                            if (((Documento)Session["Documento"]).NumerosDocumento == item.Id)
                            {
                                <button class="btn btn-dark" disabled>
                                    Seleccionar
                                </button>
                            }
                            else
                            {
                                <a class="btn btn-outline-dark" href="@Url.Action("SeleccionarDocumentoCliente",new { id = item.Id })">
                                    Seleccionar
                                </a>
                            }
                        }
                        else
                        {
                            <a class="btn btn-outline-dark" href="@Url.Action("SeleccionarDocumentoCliente",new { id = item.Id })">
                                Seleccionar
                            </a>
                        }
                    }
                    else
                    {
                        <a class="btn btn-outline-dark" href="@Url.Action("SeleccionarDocumentoCliente",new { id = item.Id })">
                            Seleccionar
                        </a>
                    }

                    <div class="btn-group">
                        <a class="btn btn-dark" href="@Url.Action("EditProformaCliente",new { id = item.Id, idUser = item.IdCliente })">
                            <i class="fa fa-pencil-square-o"></i>Editar
                        </a>
                        <button type="button" class="btn btn-dark dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="@Url.Action("DetailsProformaCliente",new { id = item.Id, idCliente = usuario.Id })">
                                <i class="fa fa-info-circle"></i>Detalles
                            </a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="@Url.Action("DuplicarProforma",new { id = item.Id })">
                                <i class="fa fa-files-o"></i>Duplicar
                            </a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="@Url.Action("CancelarProformaCliente",new { id = item.Id })" style="color: red">
                                <i class="fa fa-trash-o"></i>Cancelar Proforma
                            </a>
                        </div>
                    </div>
                </td>
                </tr>
            }    @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="9">
                        No hay elementos
                    </td>
                </tr>
            }
        </table>
    </div>
</div>





@section Scripts {


    @Scripts.Render("~/bundles/jqueryval")
}


@if (Session["Proforma"] != null)
{
    switch (Session["Proforma"])
    {
        case "No existe la proforma":
            <script type="text/javascript">
                function ProformaNull() {
                    Swal.fire({
                        title: 'No existe la proforma',
                        icon: 'warning',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                ProformaNull();
            </script>
            Session["Proforma"] = null;
            break;
        case "Proforma inválida. Especifique una proforma":
            <script type="text/javascript">
                function EdicionProforma() {
                    Swal.fire({
                        title: 'Proforma inválida. Especifique una proforma',
                        icon: 'warning',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                EdicionProforma();
            </script>
            Session["Proforma"] = null;
            break;
        case "¡Proforma creada con éxito!":
            <script type="text/javascript">
                function CreacionProforma() {
                    Swal.fire({
                        title: '¡Proforma creada con éxito!',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                CreacionProforma();
            </script>
            Session["Proforma"] = null;
            break;
        case "¡Proforma actualizada correctamente!":
            <script type="text/javascript">
                function CreacionProforma() {
                    Swal.fire({
                        title: '¡Proforma actualizada con éxito!',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                CreacionProforma();
            </script>
            Session["Proforma"] = null;
            break;
        case "¡Proforma duplicada correctamente!":
            <script type="text/javascript">
                function DuplicarProforma() {
                    Swal.fire({
                        title: '¡Proforma duplicada correctamente!',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                DuplicarProforma();
            </script>
            Session["Proforma"] = null;
            break;
        case "¡Proforma convertida en Pedido exitosamente!":
            var num = Session["NumPedido"].ToString();
            <script type="text/javascript">
                function DuplicarProforma() {
                Swal.fire({
                title: '¡Proforma convertida en Pedido exitosamente!',
                        text: 'Pedido #' + @num,
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
            };
            DuplicarProforma();
            </script>
            Session["Proforma"] = null;
            Session["NumPedido"] = null;
            break;
        case "Seleccionado":
            <script type="text/javascript">
                function DuplicarProforma() {
                    Swal.fire({
                        title: '¡Proforma Seleccionada!',
                        text: 'Ahora los artículos agregados, serán incluidos en esta proforma',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                DuplicarProforma();
            </script>
            Session["Proforma"] = null;
            break;
        case "Cancelada":
            <script type="text/javascript">
                function DuplicarProforma() {
                    Swal.fire({
                        title: '¡Proforma Cancelada!',
                        text: 'La proforma ha sido cancelada con éxito',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                DuplicarProforma();
            </script>
            Session["Proforma"] = null;
            break;
        default:
            break;
    }
}

