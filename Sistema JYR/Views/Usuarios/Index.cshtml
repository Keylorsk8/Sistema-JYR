@model IEnumerable<Sistema_JYR.Models.AspNetUsers>

@{
    ViewBag.Title = "Mantenimiento Vendedores";
}
<ol class="breadcrumb container-fluid">
    <li class="breadcrumb-item"> @Html.ActionLink("Inicio", "Index", "Home") </li>
    <li class="breadcrumb-item active">Mantenimientos</li>
    <li class="breadcrumb-item active">Usuarios</li>
    <li class="breadcrumb-item active">Mantenimiento Vendedores</li>
</ol>

@using (Ajax.BeginForm("filtrarUsuariosAjax", "Usuarios", new AjaxOptions
{
    HttpMethod = "GET",
    UpdateTargetId = "divUsuarios",
    InsertionMode = InsertionMode.Replace

}))
{

<div class="container-fluid">

    <div class="row">
        <div class="col-lg-8">
            <h2><i class="fa fa-list-ul" style="margin-right: 2px"></i>Mantenimiento Vendedores</h2>
        </div>
        <div class="col-lg-4">
            <a class="btn btn-dark btn-block" href="@Url.Action("Create")">
                <i class="fa fa-plus"></i>  Crear Nuevo
            </a>
        </div>
    </div>
    <div class="row" style="margin: 2%">
        <div class="col-md-1">
            Filtro:
        </div>
        <div class="col-md-9">
            @Html.TextBox("terminoBusqueda", "", new { @class = "form-control", @placeholder = "Criterio de búsqueda" })
        </div>
        <div class="col-md-1">
            <button type="submit" value="Buscar" class="btn btn-dark btn-block"><i class="fa fa-search"></i></button>
        </div>
        <div class="col-md-1">
            <a class="btn btn-danger btn-block" href="@Url.Action("Index")">
                <i class="fa fa-trash-o"></i>
            </a>
        </div>
    </div>
</div>}

<hr />

<div class="container-fluid" style="text-align: center" id="divUsuarios">
    <table class="table table-striped table-hover table-bordered table-responsive-lg">
        <tr class="thead-light">
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                Primer Apellido
            </th>
            <th>
                Segundo Apellido
            </th>
            <th>
                Cédula
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                Estado de la cuenta
            </th>
            <th>
                Acciones
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Apellido1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Apellido2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cedula)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @if (item.Estado)
                    {
                        @Html.Label("Habilitada")
                    }
                    else
                    {
                        @Html.Label("Deshabilitada")
                    }
                </td>
                <td>
                    <a class="btn btn-dark" href="@Url.Action("Edit", new { id = item.Id })">
                        <i class="fa fa-pencil-square-o"></i>  Editar
                    </a>
                    |
                    <a class="btn btn-dark" href="@Url.Action("Details", new { id = item.Id })">
                        <i class="fa fa-info-circle"></i>  Detalles
                    </a>
                </td>
            </tr>
        }

    </table>
</div>

@if (Session["Vendedor"] != null)
{
    switch (Session["Vendedor"])
    {
        case "¡Vendedor Creado Correctamente!":
            <script type="text/javascript">
                function CreacionVendedor() {
                    Swal.fire({
                        title: '¡El vendedor ha sido creado con éxito!',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                CreacionVendedor();
            </script>
            Session["Vendedor"] = null;
            break;
        case "¡Información del vendedor actualizada correctamente!":
            <script type="text/javascript">
                function EdicionVendedor() {
                    Swal.fire({
                        title: '¡Información del vendedor actualizada correctamente!',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                EdicionVendedor();
            </script>
            Session["Vendedor"] = null;
            break;
        case "¡La contraseña del vendedor ha sido actualizada con éxito!":
            <script type="text/javascript">
                function ContraseniaVendedor() {
                    Swal.fire({
                        title: '¡La contraseña del vendedor ha sido actualizada con éxito!',
                        icon: 'success',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                ContraseniaVendedor();
            </script>
            Session["Vendedor"] = null;
            break;
        default:
            break;
    }
}
