@model Sistema_JYR.Models.Productos

@{
    ViewBag.Title = "Crear Nuevo Producto";
}

<ol class="breadcrumb container-fluid">
    <li class="breadcrumb-item"> @Html.ActionLink("Inicio", "Index", "Home") </li>
    <li class="breadcrumb-item active">Mantenimientos</li>
    <li class="breadcrumb-item active">Inventario</li>
    <li class="breadcrumb-item active">@Html.ActionLink("Mantenimiento Productos", "Index", "Productos")</li>
    <li class="breadcrumb-item active">Crear  Producto</li>
</ol>

<div class="container">
    @using (Html.BeginForm("Create", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6">
                <h2>Crear Nuevo Producto</h2>
            </div>
            <div class="col-md-6">
                <a class="btn btn-outline-dark btn-block" href="@Url.Action("Index")">
                    <i class="fa fa-arrow-left"></i> Volver
                </a>
            </div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6 col-sm-12">
                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @required = "requerido" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Descripción", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Unidad de Medida", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.UnidadDeMedida, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnidadDeMedida, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Cantidad en Inventario", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.CantidadEnInventario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CantidadEnInventario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Categoría", htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.DropDownList("IdCategoria", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Impuesto, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Impuesto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Impuesto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Estado)
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row container">
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label col-md-2">Imagen</label>
                        <div class="col-md-12">
                            <input name="imgLoad" type="file" />
                            @Html.ValidationMessageFor(model => model.imagen, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <button type="submit" value="Crear" class="btn btn-success btn-block">
                    <i class="fa fa-save"></i> Crear
                </button>
            </div>
        </div>
    </div>

    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
