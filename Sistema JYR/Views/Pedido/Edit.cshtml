@model Sistema_JYR.Models.Pedidos

@{
    ViewBag.Title = "Editar Pedido";
}

<ol class="breadcrumb container-fluid">
    <li class="breadcrumb-item"> @Html.ActionLink("Inicio", "Index", "Home") </li>
    <li class="breadcrumb-item active">Mantenimientos</li>
    <li class="breadcrumb-item active">Pedidos</li>
    <li class="breadcrumb-item active">Mantenimiento Pedidos</li>
    <li class="breadcrumb-item active">Editar</li>
</ol>
<h4>Editar Pedido No.  @ViewBag.Id</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal" style="margin-bottom: 100px">

    <div class="row">
        <div class="col col-lg-6">
            <p>Actualiza la información de la proforma</p>
        </div>
        <div class="col col-lg-6">
            <a class="btn btn-outline-dark btn-block" href="@Url.Action("Index")">
                <i class="fa fa-arrow-left"></i> Volver
            </a>

        </div>
    </div>
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdUsuario, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdUsuario", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdEstado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdEstado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TotalPagar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalPagar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalPagar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalDescuento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalDescuento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalDescuento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalImpuesto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalImpuesto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalImpuesto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroProforma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroProforma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroProforma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col col-lg-12">
                <button type="submit" value="Guardar" class="btn btn-success btn-block"> <i class="fa fa-save"></i> Guardar </button>
            </div>
        </div>

    </div>
</div>
    }




        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
