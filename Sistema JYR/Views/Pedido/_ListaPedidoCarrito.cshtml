@model Sistema_JYR.Models.Pedidos

<div id="carritoAjax">
    <div class="card bg-light mb-12" style="width:auto">
        <div class="card-header">Materiales en la Orden - Moneda: Colones ( ¢ )</div>
        <div class="card-body">
            <table class="table table-responsive-lg">
                <tr style="text-align:center">
                    <th style="text-align:center">
                        Id
                    </th>
                    <th style="text-align:center">
                        Producto
                    </th>
                    <th>
                        Cantidad
                    </th>
                    <th>
                        Cantidad Enviada
                    </th>
                    <th>
                        Precio Unitario
                    </th>
                    <th>
                        Impuesto
                    </th>
                    <th>
                        Descuento
                    </th>

                    <th>Subtotal</th>
                    <th></th>
                </tr>

                @if (Model.PedidoDetalle.Count != 0)
                {
                    foreach (var item in Model.PedidoDetalle)
                    {
                        <tr>
                            <td style="text-align:center">
                                @item.Productos.Id
                            </td>
                            <td style="text-align:center">
                                @item.Productos.Nombre
                            </td>
                            <td style="text-align:center">
                                @*Otra posible y mejor forma de hacerlo*@
                                <input type="number" style="text-align:center" min="0" id="@item.IdProducto" value="@item.Cantidad" class="form-control" onchange="CambiarCantidadPedida(@item.IdProducto)" />
                                <input type="hidden" value="@item.IdPedido" id="idPedido" />
                            </td>

                            <td style="text-align:center">
                                <input type="number" min="0" style="text-align:center" value="@item.CantidadEnviada" class="form-control" onchange="x(this.value,@item.IdProducto )" id="cantEnviada" />
                            </td>

                        <td style="text-align:center">
                            ₡@item.PrecioUnitario.ToString("0,#.00")
                        </td>
                        <td>
                            @item.Productos.Impuesto%
                        </td>
                        <td style="text-align:center">
                            <input type="number" min="0" style="text-align:center" value="@item.Descuento" class="form-control" onchange="y(@item.IdProducto, @item.IdPedido)" id="descuento" />
                        </td>
                        <td style="text-align:center">
                            @{


                                double precioBase = item.PrecioUnitario;
                                double precioConIVA = precioBase * ((Convert.ToDouble(item.Productos.Impuesto) / 100) + 1);
                                double precioConDescuento = precioConIVA - (precioConIVA * (item.Descuento / 100));
                                double iva = precioConDescuento - (precioConDescuento / ((Convert.ToDouble(item.Productos.Impuesto) / 100) + 1));
                                double descuento = precioBase - (precioConDescuento - iva);
                                double subTotal = precioBase + iva - descuento;
                                double sub = Math.Round(subTotal * item.Cantidad);

                            }
                            @sub.ToString("0,#.00")
                        </td>
                        <td style="text-align:center">

                                <a data-ajax="true" data-ajax-method="GET" data-ajax-mode="remplace" data-ajax-update="#carritoAjax" href="@Url.Action("EliminarCarrito","Pedido",new { idD = item.Id, idPedido = item.IdPedido })" class="btn btn-danger btn-block">
                                    <i class="fa fa-times"></i>
                                </a>
                            </td>
                        </tr>

                    }
                    <tr style="text-align:center">
                        <td colspan="6"></td>
                        <th colspan="2">
                            <label>Descuento Total</label>
                        </th>
                        <th colspan="2">
                            @if (Model.TotalDescuento == 0)
                            {
                                <label>0,00</label>
                            }
                            else
                            {
                                <label>@Math.Round(Model.TotalDescuento).ToString("0,#.00")</label>
                            }
                        </th>
                    </tr>
                    <tr style="text-align:center">
                        <td colspan="6"></td>
                        <th colspan="2">
                            <label>Total de Impuestos</label>
                        </th>
                        <th colspan="2">
                            @if (Model.TotalImpuesto == 0)
                            {
                                <label>0,00</label>
                            }
                            else
                            {
                                <label>@Math.Round(Model.TotalImpuesto).ToString("0,#.00")</label>
                            }
                        </th>
                    </tr>
                    <tr style="text-align:center">
                        <td colspan="6"></td>
                        <th colspan="2">
                            <label>Total a Pagar</label>
                        </th>
                        <th colspan="2">
                            @if (Model.TotalPagar == 0)
                            {
                                <label>0,00</label>
                            }
                            else
                            {
                                <label>@Math.Round(Model.TotalPagar).ToString("0,#.00")</label>
                            }
                        </th>
                    </tr>
                }
                else
                {
                    <tr style="text-align: center">
                        <td colspan="8">Ningún producto encontrado</td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <br />
    <div>
        <div class="card bg-light mb-12">
            <div class="card-body">
                @if (Model.PedidoDetalle.Count == 0)
                {
                    <div class="row">
                        <div class="col-md-12">
                            <button class="btn btn-danger btn-block" disabled style="margin:5px"><i class="fa fa-file-pdf-o" style="margin-right: 5px"></i>Exportar a PDF</button>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-md-12">
                            <a class="btn btn-danger btn-block" href="@Url.Action("Pdf", new { id = Model.Id })" target="_blank">
                                <i class="fa fa-file-pdf-o"></i> Exportar a PDF
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@if (Session["Pedidos"] != null)
{
    switch (Session["Pedidos"])
    {
        case "Cantidad en inventario menor":
            <script type="text/javascript">
                function CantidadMayor() {
                    Swal.fire({
                        title: 'Error',
                        text: 'La cantidad en inventario es menor a la cantidad requerida',
                        icon: 'error',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                CantidadMayor();
            </script>
            Session["Pedidos"] = null;
            break;
        case "Debe digitar una cantidad menor a la cantidad":
            <script type="text/javascript">
                function CantidadMayor() {
                    Swal.fire({
                        title: 'Debe digitar una cantidad enviada menor a la cantidad',
                        icon: 'error',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                CantidadMayor();
            </script>
            Session["Pedidos"] = null;
            break;
        case "Debe digitar una cantidad mayor a la cantidad enviada":
            <script type="text/javascript">
                function CantidadMenor() {
                    Swal.fire({
                        title: 'Debe digitar una cantidad mayor a la cantidad enviada',
                        icon: 'error',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                CantidadMenor();
            </script>
            Session["Pedidos"] = null;
            break;
        case "Producto es inválido. Digite un código de producto nuevamente":
            <script type="text/javascript">
                function ProductoInvalido() {
                    Swal.fire({
                        title: 'Producto es inválido. Digite un código de producto nuevamente',
                        icon: 'error',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                ProductoInvalido();
            </script>
            Session["Pedidos"] = null;
            break;
        case "Debe digitar una cantidad mayor a 0":
            <script type="text/javascript">
                function ProductoCantidad() {
                    Swal.fire({
                        title: 'Debe digitar una cantidad mayor a 0',
                        icon: 'error',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                ProductoCantidad();
            </script>
            Session["Pedidos"] = null;
            break;

        case "No se puede eliminar":
            <script type="text/javascript">
                function ProductoCantidad() {
                    Swal.fire({
                        title: 'Error',
                        text: 'No se puede eliminar este producto, debido a que ya se ha realizado una entrega parcial o total del producto',
                        icon: 'error',
                        toast: false,
                        timer: 4000,
                        timerProgressBar: true
                    });
                };
                ProductoCantidad();
            </script>
            Session["Pedidos"] = null;
            break;
        default:
            break;
    }
}
<script>
                                                function y(id, idP) {
                                                    var descuento = $("#descuento").val();;
                                                    var productoId = id;
                                                    var pedidoId = idP;

                                                    var dataObjeto = JSON.stringify({
                                                        'descuento': descuento,
                                                            'productoId': productoId,
                                                            'pedidoId': pedidoId
                                                        })

                                                        var objeto = new Object();
                                                        objeto.productoId = productoId;
                                                    objeto.descuento = descuento;
                                                    objeto.pedidoId = pedidoId;
                                                    var url = "@Url.Action("CambiarDescuento","Pedido")";
                                                    var datos = { productoId: productoId, descuento: descuento, pedidoId: pedidoId };

                                                        $.post(url, datos).done(function (datos) {
                                                            $("#carritoAjax").html(datos);
                                                        })

                                                }
</script>